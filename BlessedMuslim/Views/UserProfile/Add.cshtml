@model BlessedMuslim.Models.Users;
@{
    ViewData["Title"] = "Add User";
}

@using (Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h6>Add New User</h6>
    <hr />
    <div class="row">
        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text " id="inputGroup-sizing-sm">
                        @Html.CheckBox("cbSalesReps", false)
                    </span>Create User for Sales Representative.
                </div>


            </div>
        </div>
        <div class="col-12 col-md-6">
            <div>
                <img id="user_img"
                     height="120"
                     width="100"
                     style="border: 1px solid ; float: right; margin-bottom: 20px; " />
            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Sales Rep</span>
                </div>
                @Html.DropDownListFor(model => model.Id, (IEnumerable<SelectListItem>)ViewBag.SalesRep, "--- Select From Sales Rep List ---", new { @class = "form-control", required = "required", @disabled = "disabled" })

            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">User Name</span>
                </div>
                @Html.EditorFor(model => model.Name, new
           {
               htmlAttributes =
                    new { @class = "form-control", required = "required", autocomplete = "off" }
           })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Role</span>
                </div>
                @Html.DropDownListFor(model => model.RoleId, (IEnumerable<SelectListItem>)ViewBag.RoleId, "--- Select Role ---", new { @class = "form-control", required = "required" })

            </div>
        </div>


        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Email</span>
                </div>
                @Html.EditorFor(model => model.Email, new
           {
               htmlAttributes =
                    new { @class = "form-control", required = "required", autocomplete = "off", type = "email" }
           })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Password</span>
                </div>
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", autocomplete = "off" })
            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Phone Number</span>
                </div>
                @Html.EditorFor(model => model.Phone, new
           {
               htmlAttributes =
                            new { @class = "form-control numbers-only", required = "required", autocomplete = "off" }
           })
            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Report To</span>
                </div>
                @Html.DropDownListFor(model => model.ReportTo, (IEnumerable<SelectListItem>)ViewBag.ManagerId, "--- Select Manager ---", new { @class = "form-control" })

            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text width-100" id="inputGroup-sizing-sm">Areas</span>
                </div>
                @Html.DropDownListFor(model => model.HubId, (IEnumerable<SelectListItem>)ViewBag.HubId, "--- Select Hub Area ---", new { @class = "form-control", required = "required" })

            </div>
        </div>

        <div class="col-12 col-md-12">
            <div>
                <img id="user_Doc"
                     height="500"
                     width="400"
                     style="border: 0px ; float: right; margin-bottom: 20px; " />
            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-dark" />
            </div>
        </div>
    </div>
    <a asp-action="Index">Back to List</a>
    @if (!String.IsNullOrEmpty(ViewBag.error))
    {
        <div class="mt-2">
            <div class="alert alert-danger" role="alert">
                @ViewBag.error
            </div>
        </div>
    }

    @if (!String.IsNullOrEmpty(ViewBag.result))
    {
        <div class="mt-2">
            <div class="alert alert-success" role="alert">
                @ViewBag.result
            </div>
        </div>
    }

</div>

}


<script type="text/javascript">
    $(document).ready(function () {
        $("[id=cbSalesReps]").change(function () {
            if ($(this).is(":checked") && $('#Id').is(':disabled')) {
                $("[id=Id]").prop('disabled', false);
                $("[id=Name]").val("");
                $("#Id").val($("#target option:first").val());
            }
            else {
                $("[id=Id]").prop('disabled', true);
                $("[id=Name]").val("");
                $("#Id").val($("#target option:first").val());
            }
            if ($(this).is(":checked") && $('#HubId').is(':enabled')) {

                $("[id=HubId]").prop('disabled', true);
                $("#HubId").val($("#target option:first").val());
            }
            else {
                $("[id=HubId]").prop('disabled', false);
                $("#HubId").val($("#target option:first").val());
            }
        });

        $("[id=Id]").change(function () {

            var index = $("#Id option:selected").html();
            if (index != "") {
                $("[id=Name]").val(index);
            }
        });
    });

    function show(input,id) {
        var fileTypes = ["Jpg", "png", "jpg", "jpeg", "PNG"];
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            var extension = input.files[0].name.split('.').pop().toLowerCase();
            var isSuccess = fileTypes.indexOf(extension) > -1; 
            if (isSuccess) {
                filerdr.onload = function (e) {
                    $('#' + id).attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
            else {
                alert("Please select Image in this Format (Jpg,png,jpeg)");
            }

        }
    }
</script>