@model BlessedMuslim.Models.DsrApplicationForm;
@{
    ViewData["Title"] = "Applicants";
}

@using (Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h6>Edit Applicants</h6>
        <hr />
        <div class="row">
            <div class="col-12 col-md-6">
                <h6>Applicant Photo</h6>
                <div class="input-group input-group-sm mb-3">
                    <img id="user_img" alt="N/A"
                         height="250"
                         width="250"
                         style="border: 1px solid ; float: right; margin-bottom: 20px; " src="~/Documents/@Model.Photo" />

                </div>

            </div>
            <div class="col-12 col-md-6">
                <h6>Applicant ID Card</h6>
                <div class="input-group input-group-sm mb-3">
                    <img id="user_Doc" alt="N/A"
                         height="250"
                         width="250"
                         style="border: 0px ; float: right; margin-bottom: 20px; " src="~/Documents/@Model.Idphoto" />
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Applicant Photo</span>
                    </div>
                    <input type="file" title="Upload User Image" name="files" onchange="show(this,'user_img')" accept="image/*" />

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Applicant ID Card</span>
                    </div>
                    <input type="file" title="Upload Documents" name="Documents" onchange="show(this,'user_Doc')" accept="image/*" />

                </div>
            </div>
            @Html.HiddenFor(model => model.Photo, new { @Value = Model.Photo })
            @Html.HiddenFor(model => model.Idphoto, new { @Value = Model.Idphoto })
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">First Name</span>
                    </div>
                    @Html.EditorFor(model => model.FirstName, new
               {
                   htmlAttributes =
                    new { @class = "form-control alphabets-only", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Last Name</span>
                    </div>
                    @Html.EditorFor(model => model.LastName, new
               {
                   htmlAttributes =
                    new { @class = "form-control alphabets-only", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Gender</span>
                    </div>

                    @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>{
        new SelectListItem{ Text="Male", Value="Male"},
        new SelectListItem{ Text="Female", Value="Female"}
        }, "--- Select Gender ---", new { @class = "form-control", required = "required" })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Date Of Birth</span>
                    </div>
                    @Html.EditorFor(model => model.Dob, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required", type = "date", @Value = @Model.Dob.ToString("yyyy-MM-dd") }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Contact Number</span>
                    </div>
                    @Html.EditorFor(model => model.ContactNumber, new
               {
                   htmlAttributes =
                    new { @class = "form-control numbers-only", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Email</span>
                    </div>
                    @Html.EditorFor(model => model.Email, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required" }
               })

                </div>
            </div>

            <div class="col-12 col-md-12">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Address Line 1</span>
                    </div>
                    @Html.EditorFor(model => model.AddressLine1, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-12">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Address Line 2</span>
                    </div>
                    @Html.EditorFor(model => model.AddressLine2, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Post Code</span>
                    </div>
                    @Html.EditorFor(model => model.PostCode, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Interested Area</span>
                    </div>
                    @Html.DropDownListFor(model => model.AreaId, (IEnumerable<SelectListItem>)ViewBag.AreaId, "--- Select Your Area ---", new { @class = "form-control", required = "required" })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Phone 1</span>
                    </div>
                    @Html.EditorFor(model => model.Phone1, new
               {
                   htmlAttributes =
                    new { @class = "form-control numbers-only", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Phone 2</span>
                    </div>
                    @Html.EditorFor(model => model.Phone2, new
               {
                   htmlAttributes =
                    new { @class = "form-control numbers-only" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Date Of Joining</span>
                    </div>
                    @Html.EditorFor(model => model.DateOfJoining, new
               {
                   htmlAttributes =
                    new { @class = "form-control", type = "date" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Account #</span>
                    </div>
                    @Html.EditorFor(model => model.AccountNo, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required", @maxlength = "8" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Sort Code</span>
                    </div>
                    @Html.EditorFor(model => model.SortCode, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required", @pattern = "[0-9]{2}-[0-9]{2}-[0-9]{2}", @placeholder = "XX-XX-XX" }
               })

                </div>
            </div>

            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Reference Code</span>
                    </div>
                    @Html.EditorFor(model => model.ReferenceCode, new
               {
                   htmlAttributes =
                    new { @class = "form-control", required = "required" }
               })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Submit Date</span>
                    </div>
                    @Html.EditorFor(model => model.SubmitDate, new
                       {
                           htmlAttributes =
                            new { @class = "form-control", required = "required", @disabled = "disabled" }
                       })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Approved Date</span>
                    </div>
                    @Html.EditorFor(model => model.ApprovedDate, new
                       {
                           htmlAttributes =
                            new { @class = "form-control" }
                       })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Rejected Date</span>
                    </div>
                    @Html.EditorFor(model => model.RejectedDate, new
                       {
                           htmlAttributes =
                            new { @class = "form-control" }
                       })

                </div>
            </div>
            <div class="col-12 col-md-12">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Remarks</span>
                    </div>
                    @Html.EditorFor(model => model.Remarks, new
               {
                   htmlAttributes =
                    new { @class = "form-control" }
               })
                </div>
            </div>

        </div>

        <div class="row">

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-dark" />
                </div>
            </div>
        </div>

        @if (!String.IsNullOrEmpty(ViewBag.error))
        {
            <div class="mt-2">
                <div class="alert alert-danger" role="alert">
                    @ViewBag.error
                </div>
            </div>
        }

        @if (!String.IsNullOrEmpty(ViewBag.result))
        {
            <div class="mt-2">
                <div class="alert alert-success" role="alert">
                    @ViewBag.result
                </div>
            </div>
        }

    </div>
}

<script type="text/javascript">
    function show(input, id) {
        var fileTypes = ["Jpg", "png", "jpg", "jpeg", "PNG"];
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            var extension = input.files[0].name.split('.').pop().toLowerCase();
            var isSuccess = fileTypes.indexOf(extension) > -1;
            if (isSuccess) {
                filerdr.onload = function (e) {
                    $('#' + id).attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
            else {
                alert("Please select Image in this Format (Jpg,png,jpeg)");
            }

        }
    }
</script>