@model BlessedMuslim.Models.ContractPaymentViewModel;
@{
    ViewData["Title"] = "Add Contract Payment";
}

@using (Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data", name = "frmContractPaymentViewModel", id = "frmContractPaymentViewModel" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h6>Add New Contract Payment</h6>
        <hr />
        <div class="row">
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Retailer</span>
                    </div>
                    @Html.DropDownListFor(model => model.RetailerId, (IEnumerable<SelectListItem>)ViewBag.RetailersId, "--- Select Retailer ---", new { @class = "form-control", required = "required" })

                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Contract Name</span>
                    </div>
                    @Html.EditorFor(model => model.ContractName, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required", disabled="disabled" }
                    })
                </div>
            </div>
        
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Retailer Name</span>
                    </div>
                    @Html.EditorFor(model => model.RetailerName, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required", disabled="disabled" }
                    })
                </div>
            </div>
        
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Contract Period</span>
                    </div>
                    @Html.EditorFor(model => model.ContractPeriod, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required", disabled="disabled" }
                    })
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Contract Amount</span>
                    </div>
                    @Html.EditorFor(model => model.ContractAmount, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required", disabled="disabled" }
                    })
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Ref Number</span>
                    </div>
                    @Html.EditorFor(model => model.RefNumber, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required" }
                    })
                </div>
            </div>
             <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Transaction Date</span>
                    </div>
                    @Html.EditorFor(model => model.TransactionDate, new
                    {
                        htmlAttributes =
                        new { @class = "form-control", required = "required" }
                    })
                </div>
            </div>

             <div class="col-12 col-md-6">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text width-100" id="inputGroup-sizing-sm">Comments</span>
                    </div>
                    @Html.TextAreaFor(model => model.Comments,
               
                    new { @class = "form-control", required = "required", style = "width:70% !important;", rows="3" })

                </div>
            </div>
        </div>

        <div class="row">

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-dark" />
                </div>
            </div>
        </div>

        @if (!String.IsNullOrEmpty(ViewBag.error))
        {
            <div class="mt-2">
                <div class="alert alert-danger" role="alert">
                    @ViewBag.error
                </div>
            </div>
        }

        @if (!String.IsNullOrEmpty(ViewBag.result))
        {
            <div class="mt-2">
                <div class="alert alert-success" role="alert">
                    @ViewBag.result
                </div>
            </div>
        }

    </div>
}

<script type="text/javascript">
    
$(document).ready(function() {
    $("#RetailerId").change(function() {
        var _ContractId = $(this).children("option:selected").val();
        $.ajax({
            url: "/ContractPayments/getContractDetails",
            type: "GET",
            dataType: "json",
            data: { RetailerId : _ContractId },
            success: function(data) {
                debugger;
                $("#ContractName").val(data.data.ContractName);
                $("#RetailerName").val(data.data.RetailerName);
                $("#ContractPeriod").val(data.data.ContractPeriod);
                $("#ContractAmount").val(data.data.ContractAmount);
            }
        })
    });
});
</script>